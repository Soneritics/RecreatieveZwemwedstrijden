@using Models

<!-- Printing notification -->
<div class="row">
    <div class="col-lg-6">
        <div class="alert alert-info mb-3 no-print" role="alert">
            <div class="row">
                <div class="col-10">
                    <p class="pt-2 mb-0">
                        <strong>Rapport exporteren naar PDF</strong><br>
                    </p><ol class="my-0">
                        <li>Ga in de browser naar het printscherm (CTRL+P) of druk op de printknop rechts.</li>
                        <li>Kies vervolgens bij bestemming voor <em><i class="oi oi-document"></i> Opslaan als PDF</em>.</li>
                        <li>Druk vervolgens op de printknop om het rapport als PDF te downloaden.</li>
                    </ol>
                    <p></p>
                </div>

                <div class="col-2 text-center">
                    <button class="btn btn-lg btn-outline-primary mt-4" onclick="window.print();"><i class="oi oi-print"></i></button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Printing notification -->

<!-- Front page -->
<div class="print-break-after">
    <p class="mt-5 text-center">
        <img src="https://www.zvw74.nl/u/Site/zwemvereniging-westervoort-logo.png" style="max-width: 80%; max-height: 150px; width: 100%" />
    </p>
    
    <h1 class="text-center mt-5 mb-5">@Match.Name</h1>
    
    <div class="row">
        <div class="col-4">
            <table class="table no-span-margin table-sm">
                <thead>
                    <tr>
                        <th colspan="2">@Match.PoolName</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Organisatie:</td>
                        <td>@Match.Organiser</td>
                    </tr>
                    <tr>
                        <td>Inzwemmen:</td>
                        <td><span>@Match.Warmup.Hour.ToString("D2")</span><span>:</span><span>@Match.Warmup.Minute.ToString("D2")</span></td>
                    </tr>
                    <tr>
                        <td nowrap>Start wedstrijd:</td>
                        <td><span>@Match.Start.Hour.ToString("D2")</span><span>:</span><span>@Match.Start.Minute.ToString("D2")</span></td>
                    </tr>
                </tbody>
            </table>
            
            <p class="mt-4 mb-0"><strong>Deelnemers:</strong></p>
            @foreach (var reg in Registrations.OrderBy(c => c.Club))
            {
                @reg.Club<br />
            }
        </div>
        <div class="col-8">
            <table class="table no-span-margin table-sm">
                <thead>
                    <tr>
                        <th class="text-center">Programma</th>
                        <th class="text-right">Afstand</th>
                        <th>Slag</th>
                        <th>Opmerkingen</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var program in Match.Programs)
                    {
                        <tr>
                            <td class="text-center">@program.Order</td>
                            <td class="text-right">@program.Distance<span>m</span></td>
                            <td>@program.Stroke</td>
                            <td>@program.Comments</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- Front page -->

<!-- Non printable title -->
<h2 class="text-center mt-5 mb-5 no-print">Wedstrijdprogramma</h2>
<!-- Non printable title -->

<!-- Main program loop -->
@foreach (var program in GeneratedMatchProgram.GeneratedPrograms)
{
    var matchProgram = Match.Programs.Single(p => p.Id.Equals(program.ProgramId));

    <div class="avoid-break-inside">
        <!-- Program information -->
        <div class="row program-top-row">
            <div class="col-3">Programma @matchProgram.Order</div>
            <div class="col-6 text-center">@matchProgram.Distance<span>m</span> @matchProgram.Stroke</div>
            <div class="col-3 text-right">@matchProgram.Comments</div>
        </div>
        <!-- Program information -->

        <!-- Series -->
        @{
            var allProgramSeries = program.GetSeries();
        }
        @foreach (var series in allProgramSeries)
        {
            <table class="table table-sm mt-3 series-table">
                <thead>
                <tr>
                    <th colspan="5">Serie @series.Key van @allProgramSeries.Count</th>
                    <th class="text-center" nowrap="nowrap">
                        Min&nbsp;&nbsp;
                        Sec&nbsp;&nbsp;
                        0,01
                    </th>
                </tr>
                </thead>
                <tbody>
                @for (var i = 1; i <= Match.SwimmingLanes; i++)
                {
                    var swimmerId = @series.Value.ContainsKey(i) ? @series.Value[i] : string.Empty;
                    var swimmer = Registrations
                        .Where(r => r.RegistrationList?.Any() == true)
                        .SelectMany(r => r.RegistrationList)
                        .FirstOrDefault(r => r.Id.Equals(swimmerId));

                    var clubName = Registrations
                        .FirstOrDefault(r => r.RegistrationList?.Any(r => r.Id.Equals(swimmerId)) == true)?
                        .Club
                        ?? string.Empty;

                    <tr>
                        <td nowrap="nowrap" width="5%">@i<span>.</span></td>
                        <td nowrap="nowrap" width="30%">@swimmer?.Firstname @swimmer?.Lastname</td>
                        <td nowrap="nowrap" width="10%" class="text-right">
                            @if (swimmer != default)
                            {
                                @matchProgram.Distance<span>m</span>
                            }
                        </td>
                        <td nowrap="nowrap" width="15%">
                            @if (swimmer != default)
                            {
                                @matchProgram.Stroke.ToLowerInvariant()
                            }
                        </td>
                        <td width="20%" style="max-width: 80px;" class="cut-off-overflow">@clubName</td>
                        <td nowrap="nowrap" width="20%">&nbsp;</td>
                    </tr>
                }
                </tbody>
            </table>
        }
        <!-- Series -->

        <!-- Spacer for the end of a program -->
        <p class="mt-3 mb-3">&nbsp;</p>
        <!-- Spacer for the end of a program -->
    </div>

    <!-- Break -->
    @if (Match.BreakAfterProgram == matchProgram.Order)
    {
        <div class="program-break">Pauze</div>
        <p class="no-print mb-5">&nbsp;</p>
    }
    <!-- Break -->
}
<!-- Main program loop -->

@code {
    [Parameter]
    public Match Match { get; set; }
    
    [Parameter]
    public GeneratedMatchProgram GeneratedMatchProgram { get; set; }

    [Parameter]
    public IEnumerable<Registrations> Registrations { get; set; }
}