@page "/find-match"
@inject NavigationManager NavigationManager
@inject HttpClient httpClient
@using System.ComponentModel.DataAnnotations

<PageTitle>Wedstrijd openen</PageTitle>

<h1>Wedstrijd openen</h1>
<p>
    blablabla.
    nog meer bla.
</p>

<EditForm Model="@_matchIdModel" OnValidSubmit="@OpenMatch">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    @if (_errorMessageVisible)
    {
        <div class="validation-message">Deze wedstrijd is niet gevonden.</div>
    }

    <InputText id="matchId" @bind-Value="_matchIdModel.MatchId" />
    <button class="btn btn-primary" type="submit">Submit</button>
</EditForm>

@code {
    [CascadingParameter]
    public SharedLayout Layout { get; set; }

    private MatchIdModel _matchIdModel = new();

    private bool _errorMessageVisible { get; set; }

    private async Task OpenMatch()
    {
        var matchExists = await httpClient
            .GetStringAsync($"/api/matchExists?matchId={_matchIdModel.MatchId}");

        if (matchExists.Equals("0"))
        {
            _errorMessageVisible = true;
        }
        else
        {
            _errorMessageVisible = false;
            Layout.MatchId = _matchIdModel.MatchId;
            NavigationManager.NavigateTo("/match");
        }
    }

    internal class MatchIdModel
    {
        [Required]
        public string? MatchId { get; set; }
    }
}
